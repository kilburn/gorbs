###################################################
# gosnapshot.conf - gosnapshot configuration file #

###########################
# SNAPSHOT ROOT DIRECTORY #
###########################

# All snapshots will be stored under this root directory.
#
snapshot_root: /.snapshots/{{ inventory_hostname }}

# If no_create_root is enabled, rsnapshot will not automatically create the
# snapshot_root directory. This is particularly useful if you are backing
# up to removable media, such as a FireWire or USB drive.
#
no_create_root: 1

#################################
# EXTERNAL PROGRAM DEPENDENCIES #
#################################

# LINUX USERS:   Be sure to uncomment "cmd_cp". This gives you extra features.
# EVERYONE ELSE: Leave "cmd_cp" commented out for compatibility.
cmd_cp: /bin/cp

# uncomment this to use the rm program instead of the built-in golang routine.
cmd_rm: /bin/rm

# rsync must be enabled for anything to work. This is the only command that
# must be enabled.
cmd_rsync: /usr/bin/rsync

# Uncomment this to enable remote ssh backups over rsync.
cmd_ssh: /usr/bin/ssh

#########################################
#           BACKUP INTERVALS            #
# Must be unique and in ascending order #
# i.e. hourly, daily, weekly, etc.      #
#########################################

intervals:

  - name: hourly
    keep: 3

  - name: daily
    keep: 7

  - name: weekly
    keep: 4

  - name: monthly
    keep: 3

############################################
#              GLOBAL OPTIONS              #
# All are optional, with sensible defaults #
############################################

# Verbose level, 1 through 5.
# 1     Quiet           Print fatal errors only
# 2     Default         Print errors and warnings only
# 3     Verbose         Show equivalent shell commands being executed
# 4     Extra Verbose   Show extra verbose information
# 5     Debug mode      Everything
verbose: 2

# Same as "verbose" above, but controls the amount of data sent to the
# logfile, if one is being used. The default is 3.
loglevel: 3

# If you enable this, data will be written to the file you specify. The
# amount of data written is controlled by the "loglevel" parameter.
# @TODO
#logfile  /var/log/rsnapshot.log

# If enabled, rsnapshot will write a lockfile to prevent two instances
# from running simultaneously (and messing up the snapshot_root).
# If you enable this, make sure the lockfile directory is not world
# writable. Otherwise anyone can prevent the program from running.
lockfile: /tmp/rsnapshot.pid

# By default, rsnapshot check lockfile, check if PID is running
# and if not, consider lockfile as stale, then start
# Enabling this stop rsnapshot if PID in lockfile is not running
# @TODO
#stop_on_stale_lockfile   0

# Default rsync args. All rsync commands have at least these options set.
#
#rsync_short_args: -a
rsync_long_args: "--delete --numeric-ids --relative --delete-excluded --rsync-path=rsync_sudo.sh"

# ssh has no args passed by default, but you can specify some here.
ssh_args: "-p 22"

# The include_file and exclude_file parameters, if enabled, simply get
# passed directly to rsync. Please look up the --include-from and
# --exclude-from options in the rsync man page for more details.
#include_file /path/to/include/file
exclude_file:  /etc/rsnapshot/{{ inventory_hostname }}/excludes

# Number of rsync re-tries. If you experience any network problems or
# network card issues that tend to cause ssh to crap-out with
# "Corrupted MAC on input" errors, for example, set this to a non-zero
# value to have the rsync operation re-tried
# @TODO
#rsync_numtries 0

###############################
### BACKUP POINTS / SCRIPTS ###
###############################

backups:
  - src:  rbackup@{{ inventory_hostname }}:/home/
    dest: ./

  - command: /usr/local/sbin/backup_mysql /etc/rsnapshot/{{ inventory_hostname }}/mysql
    dest: mysql/
